{"version":3,"sources":["components/ui/message.tsx","core/config/constants.ts","core/rest/api-rest.ts","core/services/dogs-services.ts","components/forms/app-button.tsx","components/forms/app-select.tsx","views/dogs/components/dogs-select.tsx","views/dogs/components/dog-card.tsx","views/dogs/components/dog-list.tsx","views/dogs/components/dog-list-preload.tsx","views/dogs/view-dogs.tsx"],"names":["Message","props","className","type","data-qa","role","message","constants","ENVIRONMENT","BASE_URL","dev","prod","API_VERSION","apiRest","module","self","_getUrl","_url_","get","url","axios","post","payload","put","delete","isSuccessResponse","response","hasOwnProperty","status","getDogs","Promise","resolve","reject","then","resp","dogsMapped","dogs","Object","entries","forEach","key","value","temp","name","species","Array","isArray","push","parseDogs","data","length","catch","getDogImages","dogsService","AppButton","disabled","tabIndex","onClick","handleClick","idQa","label","AppSelect","aria-required","required","onChange","e","handleOnChange","target","noSelectionLabel","valueNoSelection","list","map","item","DogsSelect","useState","dogPreselect","setDogPreselect","speciePreselect","setSpeciePreselect","mapSpeciesToSelect","filter","dog","val","disabledActions","onSelectDog","specie","DogCard","classImg","setClassImg","onLoad","img","naturalHeight","naturalWidth","src","dogImg","alt","DogList","dogSelected","images","index","DogListPreload","ViewDogs","isLoad","setIsLoad","isLoadImages","setIsLoadImages","hasError","setHasError","errorMessage","setErrorMessage","useSelector","state","dogsReducer","dispatch","useDispatch","actionsDogs","fetchDogs","selectDog","unselectDog","useEffect","err","selectDogAndImages","aria-hidden"],"mappings":"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","file":"static/js/4.b6fec181.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface IntMessage {\r\n  type: string;\r\n  message?: string;\r\n}\r\n\r\nconst Message: React.FC<IntMessage> = (props)  => {\r\n  return (\r\n    <div className={`message message--${props.type}`} data-qa=\"messages\" role=\"complementary\">\r\n      { props.message && props.message !== '' ? props.message : 'Something sinister has happened' }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","interface constants {\r\n  ENVIRONMENT: 'dev' | 'prod';\r\n  BASE_URL: {\r\n    dev: string;\r\n    prod: string;\r\n  },\r\n  API_VERSION: string;\r\n}\r\n\r\nconst constants: constants = {\r\n  ENVIRONMENT: 'dev',\r\n  BASE_URL: {\r\n    dev: 'https://dog.ceo',\r\n    prod: 'https://dog.ceo'\r\n  },\r\n  API_VERSION: 'api'\r\n};\r\n\r\nexport default constants;","import axios from 'axios';\r\nimport constants from '../config/constants';\r\nimport { IntResponses } from '../../schemas/responses';\r\n\r\ninterface IntApiRest {\r\n  _getUrl(_url_: string): string;\r\n  get(_url_: string): Promise<any>;\r\n  post(_url_: string, payload?: any): Promise<any>;\r\n  put(_url_: string, payload?: any): Promise<any>;\r\n  delete(_url_: string): Promise<any>;\r\n  isSuccessResponse(response: IntResponses) : boolean;\r\n}\r\n\r\nconst apiRest = ( ()=> {\r\n\r\n  const module = {} as IntApiRest;\r\n  const self = module;\r\n\r\n  module._getUrl = (_url_) => {\r\n    return `${constants.BASE_URL[constants.ENVIRONMENT]}/${constants.API_VERSION}/${_url_}`;\r\n  }\r\n\r\n  module.get = (_url_) => {\r\n    const url = self._getUrl(_url_);\r\n    return axios.get(url);\r\n  };\r\n\r\n  module.post = (_url_, payload) => {\r\n    const url = self._getUrl(_url_);\r\n    return axios.post(url, payload);\r\n  };\r\n\r\n  module.put = (_url_, payload) => {\r\n    const url = self._getUrl(_url_);\r\n    return axios.put(url, payload);\r\n  };\r\n\r\n  module.delete = (_url_) => {\r\n    const url = self._getUrl(_url_);\r\n    return axios.delete(url);\r\n  };\r\n\r\n  module.isSuccessResponse = (response) => {\r\n    if (response.hasOwnProperty('status') && response.status === 'success' && response.hasOwnProperty('message')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return {\r\n    get: module.get,\r\n    post: module.post,\r\n    put: module.put,\r\n    delete: module.delete,\r\n    isSuccessResponse: module.isSuccessResponse\r\n  }\r\n\r\n})();\r\n\r\nexport default apiRest;","import apiRest from '../rest/api-rest';\r\nimport { IntDog } from '../../schemas/dogs';\r\nimport { IntResponses } from '../../schemas/responses';\r\n\r\nconst parseDogs = (resp: IntResponses): Array<IntDog> => {\r\n  const dogs = [] as Array<IntDog>;\r\n\r\n  if (apiRest.isSuccessResponse(resp)) {\r\n    Object.entries(resp.message).forEach(([key, value]) => {\r\n      let temp = {} as IntDog;\r\n\r\n      temp.name = key;\r\n      temp.species = Array.isArray(value) ? value : [];\r\n\r\n      dogs.push(temp);\r\n    });\r\n  }\r\n\r\n  return dogs;\r\n}\r\n\r\nconst getDogs = (): Promise<Array<IntDog> | string> => {\r\n  return new Promise( (resolve, reject) => {\r\n    apiRest.get('breeds/list/all').then( (resp) => {\r\n      const dogsMapped = parseDogs(resp.data);\r\n\r\n      if (dogsMapped.length) {\r\n        resolve(dogsMapped);\r\n\r\n      } else {\r\n        reject('error');\r\n      }\r\n    }).catch( () => {\r\n      reject('error');\r\n    })\r\n  });\r\n};\r\n\r\nconst getDogImages = (url: string): Promise<Array<string> | string> => {\r\n  return new Promise( (resolve, reject) => {\r\n    apiRest.get(`breed/${url}/images`).then( (resp) => {\r\n      if (apiRest.isSuccessResponse(resp.data) && Array.isArray(resp.data.message)) {\r\n        resolve(resp.data.message);\r\n\r\n      } else {\r\n        reject('error');\r\n      }\r\n    }).catch( () => {\r\n      reject('error');\r\n    })\r\n  });\r\n};\r\n\r\nconst dogsService = () => {\r\n  return {\r\n    getDogs,\r\n    getDogImages\r\n  }\r\n};\r\n\r\nexport default dogsService;\r\n","import React from 'react';\r\n\r\ninterface IntAppButton{\r\n  label: string;\r\n  disabled?: boolean;\r\n  tabIndex?: number;\r\n  idQa?:string;\r\n  handleClick?(): any;\r\n}\r\n\r\nconst AppButton: React.FC<IntAppButton> = (props)  => {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      tabIndex={props.tabIndex}\r\n      className={`dog-form__button dog-select__item  ${ props.disabled === true ? 'dog-form__button--disabled': ''}`}\r\n      onClick={props.handleClick}\r\n      data-qa={props.idQa}\r\n    >\r\n      {props.label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AppButton;","import React from 'react';\r\n\r\ninterface IntItemList {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\ninterface IntAppSelect{\r\n  required?: boolean;\r\n  label?: string;\r\n  noSelectionLabel?: string;\r\n  valueNoSelection?: string;\r\n  disabled?: boolean;\r\n  tabIndex?: number;\r\n  idQa?:string;\r\n  handleOnChange(value: string): any;\r\n  list: Array<IntItemList>;\r\n}\r\n\r\nconst AppSelect: React.FC<IntAppSelect> = (props)  => {\r\n  return (\r\n    <>\r\n    {props.label && <label>props.label</label>}\r\n    <select\r\n      aria-required={props.required}\r\n      tabIndex={props.tabIndex}\r\n      className={`dog-form__select dog-select__item ${ props.disabled ? 'dog-form__select--disabled': ''}`}\r\n      disabled={props.disabled}\r\n      onChange={e => props.handleOnChange(e.target.value)}\r\n      data-qa={props.idQa}\r\n    >\r\n\r\n      {props.noSelectionLabel && <option value={props.valueNoSelection}>{props.noSelectionLabel}</option>}\r\n\r\n      {Array.isArray(props.list) && props.list.map((item: IntItemList) => {\r\n        return (\r\n          <option value={item.key} key={item.key}>{item.value}</option>\r\n        )\r\n      })}\r\n\r\n    </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppSelect;","import React, { useState }  from 'react';\r\nimport { IntDog } from '../../../schemas/dogs';\r\nimport { IntHandleSelectDog } from '../schemas/view-dogs-interfaces';\r\n\r\nimport AppButton from '../../../components/forms/app-button';\r\nimport AppSelect from '../../../components/forms/app-select';\r\n\r\ninterface IntDogsSelectProps {\r\n  readonly list: Array<IntDog>;\r\n  readonly disabledActions: boolean;\r\n  onSelectDog(dogData: IntHandleSelectDog): any;\r\n}\r\n\r\nconst DogsSelect: React.FC<IntDogsSelectProps> = (props)  => {\r\n  const [dogPreselect, setDogPreselect] = useState('noDogSelected');\r\n  const [speciePreselect, setSpeciePreselect] = useState('noDogSelected');\r\n\r\n  // user actions\r\n  const handleSelectDog = (val: string) => {\r\n    setDogPreselect(val);\r\n    setSpeciePreselect('noDogSelected');\r\n  };\r\n\r\n  const selectDog = () => {\r\n    if (dogPreselect !== 'noDogSelected' && !props.disabledActions) {\r\n      props.onSelectDog({\r\n        dog: dogPreselect,\r\n        specie: speciePreselect\r\n      });\r\n    }\r\n  };\r\n\r\n  // render\r\n  const mapDogsToSelect = () => {\r\n    return props.list.map((dog: IntDog) => {\r\n      return {\r\n        key: dog.name,\r\n        value: dog.name  + (dog.species.length > 0 ? ' *' : '')\r\n      }\r\n    });\r\n  };\r\n\r\n  const mapSpeciesToSelect = () => {\r\n    const species = props.list.filter((dog) => {\r\n      return dog.name === dogPreselect;\r\n    });\r\n\r\n    if (!species.length) {\r\n      return [];\r\n    }\r\n    return species[0].species.map((dog: string) => {\r\n      return {\r\n        key: dog,\r\n        value: dog\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"dog-form dog-select__container\" role=\"navigation\">\r\n\r\n      <AppSelect\r\n        required={true}\r\n        noSelectionLabel=\"Select\"\r\n        valueNoSelection=\"noDogSelected\"\r\n        tabIndex={1}\r\n        idQa=\"selectDog\"\r\n        handleOnChange={handleSelectDog}\r\n        list={mapDogsToSelect()}\r\n      ></AppSelect>\r\n\r\n      <AppSelect\r\n        required={false}\r\n        noSelectionLabel=\"Select\"\r\n        valueNoSelection=\"noDogSelected\"\r\n        tabIndex={2}\r\n        idQa=\"selectSpecie\"\r\n        handleOnChange={setSpeciePreselect}\r\n        list={mapSpeciesToSelect()}\r\n        disabled={!mapSpeciesToSelect().length}\r\n      ></AppSelect>\r\n\r\n      <AppButton\r\n        label=\"Images\"\r\n        disabled={dogPreselect === 'noDogSelected' || props.disabledActions}\r\n        tabIndex={3}\r\n        handleClick={selectDog}\r\n        idQa=\"submitSelectDog\"\r\n      ></AppButton>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DogsSelect;","import React, { useState } from 'react';\r\n\r\ninterface IntDogCardProps {\r\n  dogImg: string;\r\n  key?: number;\r\n}\r\n\r\nconst DogCard: React.FC<IntDogCardProps> = (props)  => {\r\n  const [classImg, setClassImg] = useState('card-dog__image--horizontal');\r\n\r\n  const setStyle = (img: any) => {\r\n    if (img.naturalHeight > img.naturalWidth) {\r\n      setClassImg('card-dog__image--vertical');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-dog\">\r\n      <figure className=\"card-dog__figure\">\r\n        <img\r\n          onLoad={e => setStyle(e.target)}\r\n          className={'card-dog__image ' + classImg} src={props.dogImg} alt={props.dogImg}  />\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogCard;","import React from 'react';\r\nimport { IntDogSelected } from '../../../schemas/dogs';\r\nimport DogCard from './dog-card';\r\n\r\ninterface IntDogListProps {\r\n  dogSelected: IntDogSelected;\r\n}\r\n\r\nconst DogList: React.FC<IntDogListProps> = (props)  => {\r\n  return (\r\n    <div className=\"container-dog\" role=\"main\" data-qa=\"dogsList\">\r\n      {props.dogSelected.images.map((img: string, index: number) => {\r\n        return <DogCard dogImg={img} key={index} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogList;","import React from 'react';\r\n\r\nconst DogListPreload: React.FC = ()  => {\r\n  return (\r\n    <div className=\"container-dog\" data-qa=\"dogsListPreload\">\r\n      <div className=\"card-dog card-dog__preload\"></div>\r\n      <div className=\"card-dog card-dog__preload\"></div>\r\n      <div className=\"card-dog card-dog__preload\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogListPreload;","/* ====================================================================\r\n  Ejemplo de una página \"feature\", una vista principal.\r\n  Incluye ejemplos rest y ejemplos de los\r\n  hooks principales: useState, useEffect, useSelector y useDispatch.\r\n\r\n  los componentes que dependen de esta vista no alteran directamente\r\n  los datos, sino que dispachean acciones a este controlador, que ya\r\n  sí ineractúa con el store.\r\n==================================================================== */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport dogsService from '../../core/services/dogs-services';\r\nimport { actionsDogs } from '../../store/reducers/dogs-reducer';\r\n\r\nimport DogsSelect from './components/dogs-select';\r\nimport DogList from './components/dog-list';\r\nimport DogListPreload from './components/dog-list-preload';\r\nimport Message from '../../components/ui/message';\r\n\r\nimport { IntDog } from '../../schemas/dogs';\r\nimport { IntHandleSelectDog } from './schemas/view-dogs-interfaces';\r\n\r\n\r\nconst ViewDogs: React.FC = () => {\r\n  // estado interno\r\n  const [ isLoad, setIsLoad ] = useState(false);\r\n  const [ isLoadImages, setIsLoadImages ] = useState(false);\r\n  const [ hasError, setHasError ] = useState(false);\r\n  const [ errorMessage, setErrorMessage] = useState('');\r\n\r\n  // store\r\n  const dogs = useSelector( (state: any) => state.dogsReducer.dogs);\r\n  const dogSelected = useSelector( (state: any) => state.dogsReducer.dogSelected);\r\n  const dispatch = useDispatch();\r\n  const { fetchDogs, selectDog, unselectDog } = actionsDogs();\r\n\r\n  // servicios\r\n  const { getDogs, getDogImages } = dogsService();\r\n\r\n  useEffect(() => {\r\n\r\n    if (!dogs.length) {\r\n      setIsLoad(true);\r\n      getDogs().then(\r\n        (dogs) => {\r\n          setIsLoad(false);\r\n          if (Array.isArray(dogs)) {\r\n            dispatch(fetchDogs(dogs));\r\n          }\r\n\r\n        }).catch( (err) => {\r\n          setIsLoad(false);\r\n          setHasError(true);\r\n          setErrorMessage(err);\r\n        });\r\n    }\r\n\r\n  }, [dispatch, dogs.length, getDogs, fetchDogs]);\r\n\r\n  const handleSelectDog = (data: IntHandleSelectDog) => {\r\n    if ( data.dog === 'noDogSelected' ||\r\n        (data.dog === dogSelected.dog && dogSelected.specie === 'noDogSelected') ||\r\n        (data.dog === dogSelected.dog && dogSelected.specie === data.specie) ) {\r\n          return;\r\n        }\r\n    let url = data.dog;\r\n    if (data.specie !== 'noDogSelected') {\r\n      url += '/' + data.specie;\r\n    }\r\n    dispatch(unselectDog());\r\n    selectDogAndImages(url, data);\r\n  }\r\n\r\n  const selectDogAndImages = (url: string, data: IntHandleSelectDog) => {\r\n    setIsLoadImages(true);\r\n    getDogImages(url).then(\r\n      (images) => {\r\n        setIsLoadImages(false);\r\n        if (Array.isArray(images)) {\r\n          const payload = {\r\n            dog: data.dog,\r\n            specie: data.specie,\r\n            species: dogs.filter( (dog: IntDog) => dog.name === data.dog ).map( (dog: IntDog) => dog.species ),\r\n            images: images\r\n          }\r\n          dispatch(selectDog(payload));\r\n        }\r\n\r\n      }).catch( (err) => {\r\n        setIsLoad(false);\r\n        setHasError(true);\r\n        setErrorMessage('Error loading data ' + err);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <section className=\"page view-dogs\">\r\n      { isLoad !== true && hasError === true && <Message type=\"error\" message={errorMessage} aria-hidden={!hasError} /> }\r\n      <DogsSelect list={dogs} disabledActions={isLoadImages} onSelectDog={handleSelectDog} />\r\n      { isLoadImages === true && <DogListPreload aria-hidden={!isLoadImages} /> }\r\n      { isLoadImages === false && <DogList dogSelected={dogSelected} aria-hidden={isLoadImages} /> }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewDogs;\r\n"],"sourceRoot":""}